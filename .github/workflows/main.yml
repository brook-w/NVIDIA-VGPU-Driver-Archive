name: clone vgpu driver
on:
  push:
    branches: [ "master" ]
# jobs:
#   setup-build-publish-deploy:
#     name: Setup
#     runs-on: ubuntu-latest
#     steps:
#     - uses: robinraju/release-downloader@v1.7
#       with: 
#         repository: "justin-himself/NVIDIA-VGPU-Driver-Archive"
#         tag: "16.2"
#         fileName: "NVIDIA-GRID-Linux-KVM-535.129.03-537.70.zip"
env:
  GITHUB_REPOSITORY: brook-w/NVIDIA-VGPU-Driver-Archive

jobs:
  upload:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout Repository
      uses: actions/checkout@v3

    - name: Download File
      run: |
        wget -O wget.zip http://ftp.gnu.org/gnu/wget/wget-1.5.3.tar.gz

    - name: Upload File to Release
      run: |
        FILE_PATH="wget.zip"
        TAG_NAME=release1 
        RELEASE_ID=$(curl -s -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
          "https://api.github.com/repos/${GITHUB_REPOSITORY}/releases/tags/${TAG_NAME}" | jq -r .id)
        upload_url=$(curl -s -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
          "https://api.github.com/repos/${GITHUB_REPOSITORY}/releases/$RELEASE_ID" | jq -r .upload_url)
        upload_url="${upload_url/\{?name,label\}/?name=$(basename "$FILE_PATH")}"
        touch .work
        echo $RELEASE_ID >> .work
        echo $upload_url >> .work
        cat .work
        
        curl -s -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
             -H "Content-Type: application/octet-stream" --data-binary "@wget.zip" "$upload_url"

    # env:
    #   GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    # - name: Checkout
    #   uses: actions/checkout@v3
    # - name: Build
    #   run: echo ${{ github.sha }} > Release.txt
    # - name: Test
    #   run: cat Release.txt
    # - name: Release
    #   uses: softprops/action-gh-release@v1
    #   if: startsWith(github.ref, 'refs/tags/')
    #   with:
    #     files: Release.txt
